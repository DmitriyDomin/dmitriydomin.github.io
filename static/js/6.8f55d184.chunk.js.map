{"version":3,"sources":["components/MovieList/MovieComponent/MovieComponent.js","components/MovieList/MovieList.js","pages/MyList/MyList.js"],"names":["MovieComponent","props","history","useHistory","useState","showMovie","setShowMovie","selectClasses","setClasses","inWatchList","dispatch","useDispatch","useEffect","setSelectClasses","filter","className","slice","in","timeout","classNames","elementClass","unmountOnExit","style","backgroundImage","image","onClick","push","id","name","rating","description","join","e","stopPropagation","actions","MovieList","watchList","useSelector","state","movies","console","log","map","movie","imageSrc","find","movieInList","classes","isRecent","length","title","component","MyList","location","movieName","setMovieName","URLSearchParams","search","get","toLocaleLowerCase","toLowerCase","includes"],"mappings":"iPAsEeA,EA5DQ,SAACC,GAEtB,IAAMC,EAAUC,cAEhB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,EAAoCF,mBAAS,CAAC,iBAA9C,mBAAOG,EAAP,KAAsBC,EAAtB,KACQC,EAAgBR,EAAhBQ,YAEFC,EAAWC,cAEjBC,qBAAU,WACRC,MACC,CAACJ,IAEJ,IAAMI,EAAmB,WACvBP,GAAa,GACTG,EACFD,EAAW,GAAD,mBAAKD,GAAL,CAAoB,aAE9BA,EAAcO,QAAO,SAAAC,GAAS,MAAkB,WAAdA,KAClCP,EAAWD,EAAcO,QAAO,SAAAC,GAAS,MAAkB,WAAdA,KAAwBC,WAkBzE,OACE,8BACE,cAAC,IAAD,CACEC,GAAKZ,EACLa,QAAS,IACTC,WAAalB,EAAMmB,aACnBC,eAAa,EAJf,SAME,qBAAKN,UAAU,kBAAkBO,MAAO,CAAEC,gBAAgB,OAAD,OAAStB,EAAMuB,MAAf,MAA2BC,QAZ1E,WACdvB,EAAQwB,KAAR,yBAA+BzB,EAAM0B,MAWjC,SACE,sBAAKZ,UAAU,kBAAf,UACE,qBAAKA,UAAU,cAAf,SAA+Bd,EAAM2B,OACrC,sBAAKb,UAAU,eAAf,UAAgCd,EAAM4B,OAAtC,MApDM,MAqDN,qBAAKd,UAAU,oBAAf,SAAqCd,EAAM6B,cAC3C,qBAAKf,UAAYR,EAAcwB,KAAK,KAAON,QA3BhC,SAACO,GACpBA,EAAEC,kBACGxB,GAGHH,GAAa,GACbI,EAASwB,IAAoBjC,EAAM0B,MAHnCjB,EAASwB,IAAiBjC,EAAM0B,MAwB1B,yB,gBCAGQ,IAvDG,SAAAlC,GAEhB,IAAMmC,EAAYC,aAAY,SAAAC,GAC5B,OAAOA,EAAMF,UAAUG,UAGnBnB,EAAenB,EAAMmB,cAAgB,GAE3CoB,QAAQC,IAAIxC,EAAMsC,QAClB,IAAMA,EAAStC,EAAMsC,OAAOG,KAAI,SAAAC,GAC9B,OACI,cAAC,IAAD,CAEEzB,QAAS,IACTC,WAAW,OAHb,SAKE,qBAAKJ,UAAU,QAAf,SACE,cAAC,EAAD,CACEa,KAASe,EAAMf,KACfC,OAAWc,EAAMd,OACjBC,YAAgBa,EAAMb,YACtBN,MAAUmB,EAAMC,SAChBjB,GAAOgB,EAAMhB,GACblB,cAAkB2B,EAAUS,MAAK,SAAAC,GAAW,OAAIA,EAAYnB,KAAOgB,EAAMhB,MACzEP,aAAiBA,OAZhBuB,EAAMhB,OAqBboB,EAAU,CAAC,cAiBjB,OAhBI9C,EAAM+C,UAAUD,EAAQrB,KAAK,UAEda,EAAOU,OAEtB,sBAAKlC,UAAYgC,EAAQhB,KAAK,KAA9B,UACE,oBAAIhB,UAAU,QAAd,SACId,EAAMiD,QAEV,cAAC,kBAAD,CAAiBnC,UAAU,OAAOoC,UAAU,MAA5C,SACIZ,OAIR,O,8GClBWa,UA9BA,SAAAnD,GAEb,IAAQoD,EAAapD,EAAboD,SAEFd,EAASF,aAAY,SAAAC,GACzB,OAAOA,EAAMF,UAAUG,UAGzBC,QAAQC,IAAIF,EAAQ,UAEpB,MAAkCnC,mBAAS,IAA3C,mBAAOkD,EAAP,KAAkBC,EAAlB,KAMA,OAJA3C,qBAAU,WAAO,IAAD,EACd2C,GAAa,cAAIC,gBAAgBH,EAASI,QAAQC,IAAI,oBAAzC,eAAuDC,sBAAuB,MAC3F,CAACN,IAGD,sBAAKtC,UAAU,UAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,+CAEF,cAAC,IAAD,CACEwB,OAAWA,EAAOvB,QAAQF,QAAO,SAAA6B,GAAK,OAAIA,EAAMf,KAAKgC,cAAcC,SAASP,MAC5ElC,aAAe","file":"static/js/6.8f55d184.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport './MovieComponent.scss'\r\nimport * as actions from \"../../../store/actions\";\r\nimport CSSTransition from \"react-transition-group/cjs/CSSTransition\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MaxRating = 10;\r\n\r\nconst MovieComponent = (props) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [showMovie, setShowMovie] = useState(false);\r\n\r\n  const [selectClasses, setClasses] = useState(['Movie-Select']);\r\n  const { inWatchList } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setSelectClasses();\r\n  }, [inWatchList]);\r\n\r\n  const setSelectClasses = () => {\r\n    setShowMovie(true);\r\n    if (inWatchList) {\r\n      setClasses([...selectClasses, 'Active']);\r\n    } else {\r\n      selectClasses.filter(className => className !== 'Active');\r\n      setClasses(selectClasses.filter(className => className !== 'Active').slice());\r\n    }\r\n  }\r\n\r\n  const onMovieAdded = (e) => {\r\n    e.stopPropagation();\r\n    if (!inWatchList) {\r\n      dispatch(actions.addMovie(props.id));\r\n    } else {\r\n      setShowMovie(false);\r\n      dispatch(actions.removeMovie(props.id));\r\n    }\r\n  }\r\n\r\n  const toMovie = () => {\r\n    history.push(`/movie?movieId=${props.id}`);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CSSTransition\r\n        in={ showMovie }\r\n        timeout={200}\r\n        classNames={ props.elementClass }\r\n        unmountOnExit\r\n      >\r\n        <div className='Movie-component' style={{ backgroundImage: `url(${props.image})` }} onClick={ toMovie }>\r\n          <div className=\"Movie-container\">\r\n            <div className=\"Movie-Title\">{ props.name }</div>\r\n            <div className=\"Movie-Rating\">{ props.rating } / { MaxRating }</div>\r\n            <div className=\"Movie-Description\">{ props.description }</div>\r\n            <div className={ selectClasses.join(' ') } onClick={ onMovieAdded }> </div>\r\n          </div>\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieComponent;\r\n","import React, {useEffect, useState} from 'react';\r\nimport MovieComponent from \"./MovieComponent/MovieComponent\";\r\nimport './MovieList.scss'\r\nimport {useSelector} from \"react-redux\";\r\nimport CSSTransition from \"react-transition-group/cjs/CSSTransition\";\r\nimport { TransitionGroup } from 'react-transition-group';\r\n\r\nconst MovieList = props => {\r\n\r\n  const watchList = useSelector(state => {\r\n    return state.watchList.movies;\r\n  });\r\n\r\n  const elementClass = props.elementClass || '';\r\n\r\n  console.log(props.movies);\r\n  const movies = props.movies.map(movie => {\r\n    return (\r\n        <CSSTransition\r\n          key={movie.id}\r\n          timeout={500}\r\n          classNames=\"item\"\r\n        >\r\n          <div className=\"Movie\">\r\n            <MovieComponent\r\n              name = { movie.name }\r\n              rating = { movie.rating }\r\n              description = { movie.description }\r\n              image = { movie.imageSrc }\r\n              id = { movie.id }\r\n              inWatchList = { !!watchList.find(movieInList => movieInList.id === movie.id) }\r\n              elementClass = { elementClass }\r\n            >\r\n            </MovieComponent>\r\n          </div>\r\n        </CSSTransition>\r\n      )\r\n    }\r\n  );\r\n\r\n  const classes = [\"Movie-list\"];\r\n  if (props.isRecent) classes.push('Recent');\r\n\r\n  const renderData = movies.length\r\n  ? (\r\n      <div className={ classes.join(' ') }>\r\n        <h2 className='Title'>\r\n          { props.title }\r\n        </h2>\r\n        <TransitionGroup className=\"List\" component='div'>\r\n          { movies }\r\n        </TransitionGroup>\r\n      </div>\r\n    )\r\n  : null;\r\n\r\n\r\n  return (\r\n    renderData\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport MovieList from \"../../components/MovieList/MovieList\";\r\nimport './MyList.scss'\r\n\r\nconst MyList = props => {\r\n\r\n  const { location } = props;\r\n\r\n  const movies = useSelector(state => {\r\n    return state.watchList.movies;\r\n  });\r\n\r\n  console.log(movies, 'Movies');\r\n\r\n  const [movieName, setMovieName] = useState('');\r\n\r\n  useEffect(() => {\r\n    setMovieName(new URLSearchParams(location.search).get('movieName')?.toLocaleLowerCase() || '')\r\n  },[location]);\r\n\r\n  return (\r\n    <div className='My-list'>\r\n      <div className=\"My-list__header\">\r\n        <h1>Your Movies</h1>\r\n      </div>\r\n      <MovieList\r\n        movies = { movies.slice().filter(movie => movie.name.toLowerCase().includes(movieName)) }\r\n        elementClass = 'Movie-element'\r\n      >\r\n      </MovieList>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyList;\r\n"],"sourceRoot":""}